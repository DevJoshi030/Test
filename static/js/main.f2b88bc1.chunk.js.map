{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishDetailsComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","ErrorMsg","Breadcrumb","BreadcrumbItem","active","RenderCard","item","in","transfornProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishesErrorMsg","leader","leadersLoading","leadersErrorMsg","promosLoading","promosErrorMsg","promotion","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","passwod","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","Footer","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","firstname","lastname","telnum","email","agree","contctType","message","resetFeedbackForm","role","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","About","leaders","Media","left","body","right","heading","title","CardHeader","list","RenderComments","comments","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","allChar","i","charCodeAt","isRated","RenderCommentInput","isCommentModalOpen","postComment","dishId","ratings","DishDetails","undefined","dishesFailed","errormsg","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","exact","match","parseInt","params","commentsErrorMsg","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","contactType","newFeedback","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","feedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2b88bc1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw fa-text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={ `/menu/${dish.id}` } >\r\n                <CardImg width='100%' src={ baseUrl + dish.image } alt={ dish.name } />\r\n                <CardImgOverlay>\r\n                    <CardTitle>\r\n                        { dish.name }\r\n                    </CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu =props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={ dish.id } className='col-12 col-md-5 m-1'>\r\n                <RenderMenuItem dish={ dish } />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.ErrorMsg) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{ props.dishes.ErrorMsg }</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    { menu }\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n        \r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap'\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nconst RenderCard = ({ item, isLoading, ErrorMsg }) => {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (ErrorMsg) {\r\n        return (\r\n            <h4>{ ErrorMsg }</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform in\r\n                transfornProps={ {\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                } }>\r\n                <Card>\r\n                    <CardImg src={ baseUrl + item.image } alt={ item.name } />\r\n                    <CardBody>\r\n                        <CardTitle>\r\n                            { item.name }\r\n                        </CardTitle>\r\n                        { item.designation ? <CardSubtitle>{ item.designation }</CardSubtitle> : null }\r\n                        <CardText>\r\n                            { item.description }\r\n                        </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nconst Home = ({ dish, dishesLoading, dishesErrorMsg, leader, leadersLoading, leadersErrorMsg, promosLoading, promosErrorMsg, promotion }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={ dish } isLoading={ dishesLoading } ErrorMsg={ dishesErrorMsg } />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={ promotion } isLoading={ promosLoading } ErrorMsg={ promosErrorMsg } />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={ leader } isLoading={ leadersLoading } ErrorMsg={ leadersErrorMsg } />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler, Collapse, NavItem, Modal, ModalHeader, ModalBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert('Username: ' + this.username.value + ' Password: ' + this.passwod.value + ' Remember Me: ' + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className='container'>\r\n                        <NavbarToggler onClick={ this.toggleNav } />\r\n                        <NavbarBrand className=\"mr-auto\" href='/'><img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />Ristorante Con Fusion</NavbarBrand>\r\n                        <Collapse isOpen={ this.state.isNavOpen } navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\"><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\"><span className=\"fa fa-info fa-lg\"></span> About</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\"><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\"><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={ this.toggleModal }>\r\n                                        <span className=\"fa fa-sign-in\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={ this.state.isModalOpen } toggle={ this.toggleModal }>\r\n                    <ModalHeader toggle={ this.toggleModal }>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={ this.handleLogin }>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={ (input) => this.username = input } />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={ (input) => this.passwod = input } />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={ (input) => this.remember = input } />\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        // console.log(\"Current State : \" + JSON.stringify(values));\r\n        // alert(\"Current State : \" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum ,values.email, values.agree, values.contctType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contct Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://www.skype.com/en/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model='feedback' onSubmit={ (values) => this.handleSubmit(values) }>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={ 2 }>First Name</Label>\r\n                                <Col md={ 10 }>\r\n                                    <Control.text model=\".firstname\"\r\n                                        id=\"firstname\"\r\n                                        name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={ {\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        } }\r\n                                    />\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={ {\r\n                                            required: \"Required \",\r\n                                            minLength: \"Must be > 2 characters \",\r\n                                            maxLength: \"Must be < 16 characters \"\r\n                                        } }\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={ 2 }>Last Name</Label>\r\n                                <Col md={ 10 }>\r\n                                    <Control.text model=\".lastname\"\r\n                                        id=\"lastname\"\r\n                                        name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={ {\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        } }\r\n                                    />\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={ {\r\n                                            required: \"Required \",\r\n                                            minLength: \"Must be > 2 characters \",\r\n                                            maxLength: \"Must be < 16 characters \"\r\n                                        } }\r\n                                    /> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={ 2 }>Contact No.</Label>\r\n                                <Col md={ 10 }>\r\n                                    <Control.text model=\".telnum\"\r\n                                        id=\"telnum\"\r\n                                        name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\" \r\n                                        validators={ {\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(10),\r\n                                            isNumber\r\n                                        } }\r\n                                    />\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={ {\r\n                                            required: \"Required \",\r\n                                            minLength: \"Must be > 2 characters \",\r\n                                            maxLength: \"Must be < 11 characters \",\r\n                                            isNumber: \"Must be a number \"\r\n                                        } }\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={ 2 }>Email</Label>\r\n                                <Col md={ 10 }>\r\n                                    <Control.text model=\".email\"\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={ {\r\n                                            required,\r\n                                            validEmail\r\n                                        } }\r\n                                    />\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={ {\r\n                                            required: \"Required \",\r\n                                            validEmail: \"Invalid Email \"\r\n                                        } }\r\n                                    /> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={ { size: 6, offset: 2 } }>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" className=\"form-check-input\" /> { ' ' }\r\n                                            <strong>May We Contact You?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={ { size: 3, offset: 1 } }>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={ 2 }>Your Feedback</Label>\r\n                                <Col md={ 10 }>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" /> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={ { size: 10, offset: 2 } }>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button> \r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nconst About = (props) => {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade>\r\n                <div className=\"row\">\r\n                    <Media>\r\n                        <div className=\"col-2 col-md-2 m-1\">\r\n                            <Media left className=\"m-1\">\r\n                                <Media image src={ baseUrl + leader.image } alt={ baseUrl + leader.name } />\r\n                            </Media>\r\n                        </div>\r\n                        <div className=\"col-10 col-md m-1\">\r\n                            <Media body className=\"m-1\" right>\r\n                                <Media heading>\r\n                                    { leader.name }\r\n                                </Media>\r\n                                <Media title className=\"mb-2\">\r\n                                    { leader.designation }\r\n                                </Media>\r\n                                { leader.description }\r\n                                <hr />\r\n                            </Media>\r\n                        </div>\r\n                    </Media>\r\n                </div>\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {leaders}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label } from 'reactstrap';\r\nimport{ Link } from 'react-router-dom';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst RenderComments = ({ comments }) => {\r\n    return (\r\n        <>\r\n            <h1>Comments:</h1>\r\n            <Stagger in>\r\n                { comments.map((comment) => {\r\n                    return (\r\n                        <Fade in>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-md m-1\">\r\n                                    <h4>{ comment.comment }</h4>\r\n                                    <br />\r\n                                    <h5>-- { comment.author }, { new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date))) }</h5>\r\n                                    <br />\r\n                                </div>\r\n                            </div>\r\n                        </Fade>\r\n                    );\r\n                })}\r\n            </Stagger>\r\n        </>\r\n    );\r\n}\r\n\r\nconst RenderDish = ({ dish }) => {\r\n    return (\r\n        <FadeTransform in\r\n                transfornProps={ {\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                } }>\r\n            <Card>\r\n                <CardImg width='100%' src={ baseUrl + dish.image } alt={ dish.name } />\r\n                <CardBody>\r\n                    <CardTitle>\r\n                        { dish.name }\r\n                    </CardTitle>\r\n                    <CardText>\r\n                        { dish.description }\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst maxLength = (len) => (val) => !(val) || val.length <= len;\r\nconst allChar = (val) => {\r\n    if (val){\r\n        for(var i = 0; i < val.length; i++) {\r\n            if (!((val.charCodeAt(i) > 64 && val.charCodeAt(i) < 91) || (val.charCodeAt(i) > 96 && val.charCodeAt(i) < 123) || val[i] === ' '))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    return false\r\n}\r\nconst isRated = (val) => val && val !== 'Choose Ratings Stars...';\r\n\r\nclass RenderCommentInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isCommentModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isCommentModalOpen: !this.state.isCommentModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(this.props.dishId, values.ratings, values.name, values.comment)\r\n        this.setState({\r\n            isCommentModalOpen: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button color=\"secondary\" className=\"border m-2 btn btn-lg\" onClick={ this.toggleModal }><span className=\"fa fa-pencil\"></span> Submit Comment</Button>\r\n\r\n                <Modal isOpen={ this.state.isCommentModalOpen } toggle={ this.toggleModal }>\r\n                    <ModalHeader>Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={ (values) => this.handleSubmit(values) }>\r\n                            <Label htmlFor=\"ratings\">Ratings</Label>\r\n                            <Control.select model='.ratings' id='ratings' name='ratings' className=\"form-control\" \r\n                                validators={ { isRated, } }\r\n                            >\r\n                                <option>Chooes Ratings Stars...</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Control.select>\r\n                            <Errors className=\"text-danger\"\r\n                                model=\".ratings\"\r\n                                show=\"touched\"\r\n                                messages={ { isRated: \"Choose a Rating\" } }\r\n                            />\r\n                            <Label htmlFor=\"name\">Your Name</Label>  \r\n                            <Control.text model='.name' id=\"name\" name=\"name\" className=\"form-control\" validators={ {\r\n                                minLength: minLength(3),\r\n                                maxLength: maxLength(15),\r\n                                allChar,\r\n                            } } />\r\n                            <Errors className=\"text-danger\"\r\n                                model='.name'\r\n                                show=\"touched\"\r\n                                messages={ { \r\n                                    minLength: \"Must be > than 2, \",\r\n                                    maxLength: \"Must be < than 16, \",\r\n                                    allChar: \"Must be a Char.\"\r\n                                }\r\n                        } />\r\n                            <Label htmlFor=\"comment\">Comment</Label>\r\n                            <Control.textarea model='.comment' id='comment' name='comment' className='form-control' rows=\"6\" />\r\n                            <Button className=\"btn btn-primary m-1\" color='primary'>Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetails = ({ dish, isLoading, ErrorMsg, comments, postComment }) => {\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (ErrorMsg) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{ ErrorMsg }</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (dish !== null && dish !== undefined) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{ dish.name }</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{ dish.name }</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 m-1\">\r\n                        <RenderDish dish={ dish } />\r\n                    </div>\r\n                    <div className=\"col-12 col-md\">\r\n                        <RenderComments comments={ comments } />\r\n                        <RenderCommentInput\r\n                            postComment={ postComment }\r\n                            dishId={ dish.id }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetails;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, ratings, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        ratings: ratings,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then((response) => {\r\n        if(response.ok)\r\n            return response;\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errormsg = new Error(error.message);\r\n        throw errormsg\r\n    })\r\n    .then((response) => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { \r\n        console.log('Post comments : ', error.message);\r\n        alert('Error: ' + error.message);\r\n    });\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n        .then((response) => {\r\n            if(response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errormsg = new Error(error.message);\r\n            throw errormsg\r\n        })\r\n        .then((response) => response.json())\r\n        .then((dishes) => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errormsg) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errormsg\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then((response) => {\r\n            if(response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errormsg = new Error(error.message);\r\n            throw errormsg\r\n        })\r\n        .then((response) => response.json())\r\n        .then((comments) => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errormsg) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errormsg\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n    return fetch(baseUrl + 'promotions')\r\n        .then((response) => {\r\n            if(response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errormsg = new Error(error.message);\r\n            throw errormsg\r\n        })\r\n        .then((response) => response.json())\r\n        .then((promos) => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errormsg) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errormsg\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n    return fetch(baseUrl + 'leaders')\r\n        .then((response) => {\r\n            if(response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errormsg = new Error(error.message);\r\n            throw errormsg\r\n        })\r\n        .then((response) => response.json())\r\n        .then((promos) => dispatch(addLeaders(promos)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errormsg) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errormsg\r\n});\r\n\r\nexport const addLeaders = (promos) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: promos\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then((response) => {\r\n        if(response.ok)\r\n            return response;\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errormsg = new Error(error.message);\r\n        throw errormsg\r\n    })\r\n    .then((response) => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error => { \r\n        console.log('Post feedback : ', error.message);\r\n        alert('Error: ' + error.message);\r\n    });\r\n}","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetails from './DishDetailsComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchPromos, fetchComments, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    leaders: state.leaders,\r\n    promotions: state.promotions\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, ratings, author, comment) => dispatch(postComment(dishId, ratings, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromos: () => { dispatch(fetchPromos()) },\r\n  fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n  \r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n        return (\r\n            <Home dish={ this.props.dishes.dishes.filter((dish) => dish.featured)[0] }\r\n              dishesLoading={ this.props.dishes.isLoading }\r\n              dishesErrorMsg={ this.props.dishes.errormsg } \r\n              leader={ this.props.leaders.leaders.filter((leader) => leader.featured)[0] }\r\n              leadersLoading={ this.props.leaders.isLoading }\r\n              leadersErrorMsg={ this.props.leaders.errormsg }\r\n              promosLoading={ this.props.promotions.isLoading }\r\n              promosErrorMsg={ this.props.promotions.errormsg } \r\n              promotion={ this.props.promotions.promotions.filter((promotion) => promotion.featured)[0] } />\r\n        );\r\n    }\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetails dish={ this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0] }\r\n          isLoading={ this.props.dishes.isLoading }\r\n          ErrorMsg={ this.props.dishes.errormsg } \r\n          comments={ this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId)) }\r\n          commentsErrorMsg={ this.props.comments.errormsg }     \r\n          postComment={ this.props.postComment }\r\n        />\r\n      );\r\n    }\r\n\r\n    const AboutPage = () => {\r\n      return (\r\n        <About leaders={ this.props.leaders } />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={ this.props.location.key } classNames=\"page\" timeout={ 300 }>\r\n            <Switch>\r\n                <Route path='/home' component={ HomePage } />\r\n                <Route exact path='/menu' component={ () => <Menu dishes={ this.props.dishes } /> } />\r\n                <Route exact path='/contactus' component={ () =>  <Contact resetFeedbackForm={ this.props.resetFeedbackForm } postFeedback={ this.props.postFeedback } /> } />\r\n                <Route path=\"/menu/:dishId\" component={ DishWithId } />\r\n                <Route path=\"/aboutus\" component={ AboutPage } />\r\n                <Redirect to='/home' />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errormsg: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errormsg: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errormsg: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errormsg: action.payload};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        isLoading: false,\r\n        errormsg: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errormsg: null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errormsg: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n        isLoading: true,\r\n        errormsg: null,\r\n        leaders: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errormsg: null, leaders: action.payload}\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errormsg: null, leaders: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errormsg: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errormsg: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errormsg: null, promotions: action.payload}\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errormsg: null, promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errormsg: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const InitialFeedback = (state = {\r\n        feedback: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_FEEDBACK:\r\n            var feedback = action.payload;\r\n            alert(\"Feedback : \" + JSON.stringify(feedback));\r\n            console.log(\"Feedback : \" + JSON.stringify(feedback));\r\n            return {...state, feedback: state.feedback.concat(feedback)}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={ store }>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions } from './promotions';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n          dishes: Dishes,\r\n          comments: Comments,\r\n          promotions: Promotions,\r\n          leaders: Leaders,\r\n          ...createForms({\r\n            feedback: InitialFeedback\r\n          })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}